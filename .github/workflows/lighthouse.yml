name: lighthouse

on:
  workflow_dispatch:
  pull_request:
    branches:
      - "main"
      - "dev"
    types:
      - opened
      - synchronize

jobs:
  lighthouseci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository // Ï†ÄÏû•ÏÜå Ï≤¥ÌÅ¨ÏïÑÏõÉ
        uses: actions/checkout@v3

      - name: Install pnpm // pnpm ÏÑ§Ïπò
        uses: pnpm/action-setup@v3
        with:
          version: 9.7.0
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Build the project
        env:
          AUTH_KAKAO_ID: ${{ secrets.AUTH_KAKAO_ID }}
          AUTH_KAKAO_SECRET: ${{ secrets.AUTH_KAKAO_SECRET }}
          AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
          AUTH_URL: ${{ secrets.AUTH_URL }}
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
          NEXT_PUBLIC_NEXTAUTH_SECRET: ${{ secrets.NEXT_PUBLIC_NEXTAUTH_SECRET }}
          NEXT_PUBLIC_GOOGLE_SITE_VERIFICATION: ${{ secrets.NEXT_PUBLIC_GOOGLE_SITE_VERIFICATION }}
          NEXT_PUBLIC_METADATABASE: ${{ secrets.NEXT_PUBLIC_METADATABASE }}
          NEXT_PUBLIC_OPENGRAPH_URL: ${{ secrets.NEXT_PUBLIC_OPENGRAPH_URL }}
        run: pnpm run build

      - name: Run Lighthouse CI // Lighthouse Ïã§Ìñâ
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
        run: |
          pnpm i -g @lhci/cli
          lhci autorun || echo "Fail to Run Lighthouse CI!"

      - name: Format lighthouse score
        id: format_lighthouse_score
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const fs = require('fs');

            const resultsPath = JSON.parse(fs.readFileSync('/home/runner/work/24th-Web-Team-3-FE/24th-Web-Team-3-FE/lhci_reports/manifest.json'))
            console.log(`Looking for results in ${resultsPath}`);

            const results = JSON.parse(fs.readFileSync(resultsPath));
            let comments = ""

            results.forEach((result,index) => {
              const { summary } = result;

              const formatResult = (res) => Math.round(res * 100);

              Object.keys(summary).forEach(
                (key) => (summary[key] = formatResult(summary[key]))
              );
              
              const score = (res) => (res >= 90 ? "üü¢" : res >= 70 ? "üü†" : "üî¥");

              const comment = [
                `‚ö°Ô∏è **Lighthouse report ${index + 1}**`,
                `| Category               | Score |`,
                `|------------------------|-------|`,
                `| ${score(summary.performance)} Performance       | ${summary.performance} |`,
                `| ${score(summary.accessibility)} Accessibility    | ${summary.accessibility} |`,
                `| ${score(summary['best-practices'])} Best practices  | ${summary['best-practices']} |`,
                `| ${score(summary.seo)} SEO                | ${summary.seo} |`,
                `| ${score(summary.pwa)} PWA                | ${summary.pwa} |`,
                `\n`,
              ].join("\n");

              comments += comment + "\n";
            });

            core.setOutput('comments', comments)

      - name: comment PR
        uses: unsplash/comment-on-pr@v1.3.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          msg: ${{ steps.format_lighthouse_score.outputs.comments }}
